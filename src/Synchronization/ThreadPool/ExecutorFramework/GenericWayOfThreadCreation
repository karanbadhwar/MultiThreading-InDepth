package Synchronization.ThreadPool.ExecutorFramework;

//We Use Executor Framework to Operate upon Thread Pool.
// There are Three Core Interfaces -> Executor, ExecutorService and ScheduledExecutorService

public class ThreadPool {
    public static void main(String[] args) {
        long startTime = System.currentTimeMillis();
        Thread[] threads = new Thread[9];
        for (int i = 1; i < 10; i++) {
            int finalI = i;
            threads[i - 1] = new Thread(() -> {
                long result = factorial(finalI);
                System.out.println(result);
            });
            threads[i-1].start();
        }

        for(Thread thread: threads)
        {
            try {
                thread.join();
            } catch (InterruptedException e) {
                Thread.currentThread().interrupt();
            }
        }
        System.out.println("Total Time: "+ (System.currentTimeMillis() - startTime));
    }

    public static long factorial(int n)
    {
        try{
            Thread.sleep(1000);
    } catch(InterruptedException e)
        {
            System.out.println(e.getMessage());
        }
        long result = 1;
        for (int i = n; i > 0 ; i--) {
            result *= i;
        }
        return result;
    }
}
